{"version":3,"sources":["singlis/events.cljs"],"mappings":";AAOA,AAAA,AAACA,AAEA,AAAKC;AAAL,AACE,AAACC;;AAEJ,AAAA,AAACF,AAEA,AAAKG;AAAL,AACE,AAACC,AAAuBD;;AAE3B,AAAA,AAACE,AAEA,AAAKJ,AAAEA;AAAP,AAAA,AAAA,AAAA;;AAGD,AAAA,AAACI,AAEA,AAAAC,AAAqBL;AAArB,AAAA,AAAAM,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAMK;AAAN,AAAA,AAAA,AAAA,AACO,AAAA,AAAA,AAACC,AAAMD,AACK,AAAA,AAAgBA;;AAEpC,AAAA,AAACE,AAEA,AAAAC,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASf;AAAT,AAAAgB,AAAAD,AAAA,AAAA,AAAWG;AAAX,AAAAF,AAAAD,AAAA,AAAA,AAAaI;AAAb,AACE,AAAA,AAAA,AAACC,AAASH,AAAmBC,AAAGC;;AAEnC,AAAA,AAACN,AAEA,AAAAQ,AAAKJ;AAAL,AAAA,AAAAK,AAAAD;AAAA,AAAAL,AAAAM,AAAA,AAAA,AAAStB;AAAT,AAAAgB,AAAAM,AAAA,AAAA,AAAWC;AAAX,AACE,AAAA,AAACX,AAAMK,AAAWM;;AAErB,AAAA,AAACV,AAEA,AAAKb,AAAEA;AAAP,AACEwB","names":["re-frame.core/reg-fx","_","singlis.streaming/enable-metamask","stream-values","singlis.streaming/process-form","re_frame.core.reg_event_fx","p__46686","map__46687","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","coeffects","cljs.core.assoc","re_frame.core.reg_event_db","p__46690","vec__46691","cljs.core.nth","db","k","v","cljs.core/assoc-in","p__46694","vec__46695","status","singlis.db/default-db"],"sourcesContent":["(ns singlis.events\n  (:require\n   [re-frame.core :as re-frame]\n   [singlis.db :as db]\n   [singlis.streaming :as streaming]\n   ))\n\n(re-frame/reg-fx\n :enable-metamask\n (fn [_]\n   (streaming/enable-metamask)))\n\n(re-frame/reg-fx\n :create-stream\n (fn [stream-values]\n   (streaming/process-form stream-values)))\n\n(re-frame/reg-event-fx\n :enable-metamask\n (fn [_ _]\n   {:enable-metamask true}))\n\n(re-frame/reg-event-fx\n :create-stream\n (fn [{coeffects :db} _]\n   {:db (assoc coeffects :status :requesting-approval)\n    :create-stream  (:stream-values coeffects)}))\n\n(re-frame/reg-event-db\n :stream-values\n (fn [db [_ k v]]\n   (assoc-in db [:stream-values k] v)))\n\n(re-frame/reg-event-db\n :update-status\n (fn [db [_ status]]\n   (assoc db :status status)))\n\n(re-frame/reg-event-db\n ::initialize-db\n (fn [_ _]\n   db/default-db))\n"]}