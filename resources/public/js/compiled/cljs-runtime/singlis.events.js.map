{"version":3,"sources":["singlis/events.cljs"],"mappings":";AAOA,AAAA,AAACA,AAEA,AAAKC;AAAL,AACE,AAACC;;AAEJ,AAAA,AAACF,AAEA,AAAKC;AAAL,AACE,AAACE;;AAEJ,AAAA,AAACH,AAEA,AAAKI;AAAL,AACE,AAACC,AAAuBD;;AAE3B,AAAA,AAACE,AAEA,AAAAC,AAAKG;AAAL,AAAA,AAAAF,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASP;AAAT,AAAAQ,AAAAD,AAAA,AAAA,AAAWG;AAAX,AACE,AAAA,AAACC,AAAMF,AAAYC;;AAEtB,AAAA,AAACE,AAEA,AAAKZ,AAAEA;AAAP,AAAA,AAAA,AAAA;;AAGD,AAAA,AAACY,AAEA,AAAKZ,AAAEA;AAAP,AAAA,AAAA,AAAA;;AAGD,AAAA,AAACY,AAEA,AAAAC,AAAqBb;AAArB,AAAA,AAAAc,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAA,AAAAI,AAAAJ,AAAA,AAAMK;AAAN,AAAA,AAAA,AAAA,AACO,AAAA,AAAA,AAACR,AAAMQ,AACK,AAAA,AAAgBA;;AAEpC,AAAA,AAACd,AAEA,AAAAe,AAAKX;AAAL,AAAA,AAAAY,AAAAD;AAAA,AAAAZ,AAAAa,AAAA,AAAA,AAASrB;AAAT,AAAAQ,AAAAa,AAAA,AAAA,AAAWC;AAAX,AAAAd,AAAAa,AAAA,AAAA,AAAaE;AAAb,AACE,AAAA,AAAA,AAACC,AAASf,AAAmBa,AAAGC;;AAEnC,AAAA,AAAClB,AAEA,AAAAoB,AAAKhB;AAAL,AAAA,AAAAiB,AAAAD;AAAA,AAAAjB,AAAAkB,AAAA,AAAA,AAAS1B;AAAT,AAAAQ,AAAAkB,AAAA,AAAA,AAAWC;AAAX,AACE,AAAA,AAAChB,AAAMF,AAAWkB;;AAErB,AAAA,AAACf,AAEA,AAAKZ,AAAEA;AAAP,AACE4B","names":["re-frame.core/reg-fx","_","singlis.streaming/check-balance","singlis.streaming/enable-metamask","stream-values","singlis.streaming/process-form","re_frame.core.reg_event_db","p__43132","vec__43133","cljs.core.nth","db","value","cljs.core.assoc","re_frame.core.reg_event_fx","p__43136","map__43137","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","coeffects","p__43139","vec__43140","k","v","cljs.core/assoc-in","p__43143","vec__43144","status","singlis.db/default-db"],"sourcesContent":["(ns singlis.events\n  (:require\n   [re-frame.core :as re-frame]\n   [singlis.db :as db]\n   [singlis.streaming :as streaming]\n   ))\n\n(re-frame/reg-fx\n :check-balance\n (fn [_]\n   (streaming/check-balance)))\n\n(re-frame/reg-fx\n :enable-metamask\n (fn [_]\n   (streaming/enable-metamask)))\n\n(re-frame/reg-fx\n :create-stream\n (fn [stream-values]\n   (streaming/process-form stream-values)))\n\n(re-frame/reg-event-db\n :update-balance\n (fn [db [_ value]]\n   (assoc db :balance value)))\n\n(re-frame/reg-event-fx\n :check-balance\n (fn [_ _]\n   {:check-balance true}))\n\n(re-frame/reg-event-fx\n :enable-metamask\n (fn [_ _]\n   {:enable-metamask true}))\n\n(re-frame/reg-event-fx\n :create-stream\n (fn [{coeffects :db} _]\n   {:db (assoc coeffects :status :requesting-approval)\n    :create-stream  (:stream-values coeffects)}))\n\n(re-frame/reg-event-db\n :stream-values\n (fn [db [_ k v]]\n   (assoc-in db [:stream-values k] v)))\n\n(re-frame/reg-event-db\n :update-status\n (fn [db [_ status]]\n   (assoc db :status status)))\n\n(re-frame/reg-event-fx\n ::initialize-db\n (fn [_ _]\n   db/default-db))\n"]}